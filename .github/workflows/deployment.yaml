
name: Build_and_Deploy_App

on:
  push:
    branches:
      - Naren/ECS

env:

  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: manage_contact_app
  IMAGE_TAG: latest

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check and Install AWS CLI v2 on Linux
        run: |
          if ! command -v aws &> /dev/null
          then
            echo "AWS CLI not found. Installing..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed: $(aws --version)"
          fi
          aws --version

      - name: Configure AWS credentials
        run: |
          echo "Configuring AWS credentials ..."
          mkdir -p ~/.aws
          cat > ~/.aws/credentials <<EOL
          [default]
          aws_access_key_id=$AWS_ACCESS_KEY_ID
          aws_secret_access_key=$AWS_SECRET_ACCESS_KEY
          EOL

          cat > ~/.aws/config <<EOL
          [default]
          region=$AWS_REGION
          output=json
          EOL

      - name: "Validate caller identity"
        run: |
          echo "Verify AWS credentials configure correctly ..."
          aws sts get-caller-identity
      

      - name: Build, Tag & push to ECR
        run: | 
          echo "Building Docker image..."
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          echo "AWS_ACCOUNT_ID = $AWS_ACCOUNT_ID"
          REPOSITORY_URL="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
          echo "REPOSITORY_URL = $REPOSITORY_URL"
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $REPOSITORY_URL/$ECR_REPOSITORY:$IMAGE_TAG
          # Login to ECR
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URL
          docker push $REPOSITORY_URL/$ECR_REPOSITORY:$IMAGE_TAG
          echo "ECR_REPOSITORY_URL=$REPOSITORY_URL/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Install Terraform manually
        run: |
          echo "Installing Terraform..."
          TERRAFORM_VERSION=1.9.5
          curl -fsSL https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Generate terraform.tfvars
        run: |
          cat > ./cicd/iac/terraform.tfvars <<EOL
          image_name = "$ECR_REPOSITORY_URL"
          postgres_user="Naren"
          postgres_password="admin"
          postgres_db="manage_contacts"
          EOL
      
      # Terraform Init
      - name: Terraform Init
        run: |
          echo "Running terraform init command ..."
          terraform init

      - name: Terraform apply
        run: |
          echo "Running 'terraform apply' command ..."
          terraform apply --auto-approve